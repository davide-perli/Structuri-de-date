//heap sort array O(nlogn)
#include <iostream>
using namespace std;

void heapify(int array[], int n, int i) {
    int largest = i; //cel  mai mare e radacina
    int left = 2 * i + 1;
    int right = 2 * i + 2;

    //left > radacina
    if (left < n && array[left] > array[largest])
        largest = left;

    //right > cel mai mare actual
    if (right < n && array[right] > array[largest])
        largest = right;

    //if cel mai mare nu e radacina
    if (largest != i) 
    {
        swap(array[i], array[largest]);

        //apelare recursiva
        heapify(array, n, largest);
    }
}

// aranjare array
void heapSort(int array[], int n) 
{
    for (int i = n / 2 - 1; i >= 0; i--)
        heapify(array, n, i);

    //cate un element din heap
    for (int i = n - 1; i > 0; i--)
    {
        //radacina actuala o mutam la final
        swap(array[0], array[i]);

        heapify(array, i, 0);
    }
}

int main() {
    int n;
    
    cout << "Numar elemente array : ";
    cin >> n;
    
    int array[n];
    
    cout << "Introduceti elementele array-ului : ";
    
    for(int i = 0; i < n; i++)
    {
        cin >> array[i];
    }
    
    
    cout << "Array initial" <<endl;
    
    for(int i : array)
    {
        cout << i << " ";
    }
    
    cout << endl;
    
    // Heap sort in ordine crescatoare
    heapSort(array, n);
    
    cout << "Array ordonat crescator prin heap sort : " << endl;
    
    for(int i : array)
    {
        cout << i << " ";
    }
    
    return 0;
}
