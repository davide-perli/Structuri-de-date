//quick sort array O(n*log(n))
#include <iostream>
using namespace std;

int partitie(int array[], int start, int end)
{
    int pivot = array[end];
    int i = start - 1;
    
    for(int j = start; j <= end - 1; j++)
    {
        if(array[j] < pivot)
        {
            i++;
            
            int aux = array[i];
            array[i] = array[j];
            array[j] = aux;
        }
    }
    
    i++;
    
    int aux = array[i];
    array[i] = array[end];
    array[end] = aux;
    
    return i;
}

void quickSort(int array[], int start, int end)
{
    if(end <= start)    // base case
        return;
        
    int pivot = partitie(array, start, end);
    quickSort(array, start, pivot - 1);
    quickSort(array, pivot + 1, end);
}

int main()
{
    int n;
    
    cout << "Numar elemente array : ";
    cin >> n;
    
    int array[n];
    
    cout << "Introduceti elementele array-ului : ";
    
    for(int i = 0; i < n; i++)
    {
        cin >> array[i];
    }
    
    
    cout << "Array initial" <<endl;
    
    for(int i : array)
    {
        cout << i << " ";
    }
    
    cout << endl;
    
    //quick sort in ordine crescatoare
    quickSort(array, 0, n - 1);
    
    cout << "Array ordonat crescator prin quick sort : " << endl;
    
    for(int i : array)
    {
        cout << i << " ";
    }
    
    return 0;
}
